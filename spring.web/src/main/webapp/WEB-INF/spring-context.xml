<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
   xmlns:tx='http://www.springframework.org/schema/tx'
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springFramework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd
   http://mybatis.org/schema/mybatis-spring
   http://mybatis.org/schema/mybatis-spring.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx.xsd">
   
   <context:component-scan base-package="spring.web"/>
   <aop:aspectj-autoproxy/>
   <mvc:annotation-driven/>  <!-- handler mapping 활성화 -->
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   <!-- 빈의 아이디는 클래스 이름의 shortname 이 됨  -->
      <property name="prefix" value="/WEB-INF/views/"/>
      <property name="suffix" value=".jsp"/>
   </bean>
   
   <mvc:resources mapping="/img/**" location="/WEB-INF/resources/img/"/>
   <mvc:resources mapping="/css/**" location="/WEB-INF/resources/css/"/>
   <mvc:resources mapping="/js/**" location="/WEB-INF/resources/js/"/>
   
   <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="java:comp/env/jdbc/hr"/>
      <property name="resourceRef" value="true"/>
   </bean>
   
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/> <!-- 이 줄로 커넥션풀이 된다. -->
      <property name="configLocation" value="classpath:spring/web/ch04/config/sqlMapConfig.xml"/>
      <property name="mapperLocations">
         <array>
            <value>classpath:spring/web/**/dao/map/*.xml</value>
         </array>
      </property>
   </bean>
   <mybatis:scan base-package="spring.web.**.dao.map"/>
   
   <bean class='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'>
      <property name = "messageConverters">
         <list>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
               
            </bean>
         </list>
      </property>
   </bean>
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
   <context:property-placeholder location="classpath:spring/web/ch06/config/attach.properties"/> <!-- properties 파일과 연결 -->
   <mvc:resources mapping="/attach/**" location="/WEB-INF/attach/"/>
   
   <!-- transaction 관리 빈 -->
   <bean id="transactionManager" class='org.springframework.jdbc.datasource.DataSourceTransactionManager'>
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   <!-- @transaction 을 해석 후 transactionManager 한테 이임-->
   <tx:annotation-driven transaction-manager="transactionManager"/>
   
   <bean id="consoleInterceptor" class="spring.web.ch09.ex01.ConsoleInterceptor"></bean>
   <bean id="loginInterceptor" class="spring.web.ch09.ex02.LoginInterceptor"></bean>
   <mvc:interceptors>
      <mvc:interceptor>
         <mvc:mapping path='/ch09/ex01/**'/>
         <ref bean="consoleInterceptor"/>
      </mvc:interceptor>
      <mvc:interceptor>
         <mvc:mapping path='/ch09/ex02/**'/>
         <ref bean="loginInterceptor"/>
      </mvc:interceptor>
   </mvc:interceptors>
   
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
   		<property name='username' value='alsdud116'/>
   		<property name='password' value='sjgflkarsrkufeec'/>
   		<property name='javaMailProperties'>
   			<props>
	   			<prop key='mail.stmp.starttls.enable'>true</prop>
	   			<prop key='mail.smtp.host'>smtp.gmail.com</prop>
	   			<prop key='mail.smtp.port'>465</prop>
	   			<prop key='mail.smtp.socketFactory.class'>javax.net.ssl.SSLSocketFactory</prop>
	   			<prop key='mail.smtp.socketFactory.port'>465</prop>
	   			<prop key='mail.smtp.socketFactory.fallback'>false</prop>
	   			<prop key='mail.smtp.auth'>true</prop>
   			</props>
   		</property>
   </bean>
</beans>

<!-- container 에 기능을 확장시키는 것 : 새로운 기능을 가지고있는 
bean들을 namespace 를 이용해 받아들이면 됨 -->